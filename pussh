#!/bin/bash

# Copyright (C) 2016 Galang23
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Git program was licensed under GPL v2

gitcheck(){
	if hash git 2> /dev/null; then
		echo "No argument specified, please use './push --help' for arguments.";
		echo "";
	else
		echo "ERROR:   You didn't install Git in this computer";
		echo "The program will exiting automatically...";
		sleep 3;
	fi
}

info="
	Push.sh v1.3. 
	Copyright (C) 2016 Galang23.
	Licensed under GPL v3 or any future GPL version.
	
	Thank you for stackoverflow.com which is help me
	developing this script.
	
	This script uses Git program which is licensed under GPLv2.
"

usage="Usage: simplegit <param> [git other args]

  -h   --help	   Print this help.
  -s   --status	   Show local repo status. Have you commit it today?
  -P   --pull      Pull change(s) from remote repo
  -p   --push	   Push only or check the up-to-date of local
		   repo and remote repo.
 -pssh --pussh    Push to remote repo via ssh
  -c   --commit	   Commit changes only, no push. \033\[41mMUST \`git add\` first!.
  -A   --all	   Commit changes and push to remote repo.
  -a   --add	   Add changes only. Like git add command.
  -C   --cancel	   Cancel any changes
  -V   --version   Print the version info
       --original  Use original git command line arguments.

This program use Git as core. You must have git program installed first before use this sript.
"

# Commit command group
commit='echo -n "Commit message: ";
read MESSAGE;
git commit -m "$MESSAGE";'

all='git add . -v ;
echo -n "Commit message: ";
read MESSAGE;
git commit -m "$MESSAGE";
echo "Pushing change to Galang23 @ branch master...";
git push ssh master;
echo "Done!";'

gitssh(){
# This function is used for pushing to ssh
	git push ssh master;

}

githttps(){
# Push via https
	git push Galang23 master

}

pullhttps(){
	git pull Galang23 master;
}

case $1 in 
--pull) pullhttps;;
-P) pullhttps;;
--push) githttps;;
-p) githttps;;
--pussh) gitssh;;
-pssh) gitssh;;
--help) echo -e "$usage";;
-h) echo -e "$usage";;
--add) git add -v . ;;
-a) git add -v . ;;
--all) eval ${all};; # ${var1} is for Run multi-line command in var1
-A) eval ${all};;
--commit) eval ${commit};;
-c) eval ${commit};;
--cancel) git reset;;
-C) git reset;;
--status) git status;;
-s) git status;;
--version) echo "$info";;
-V) echo "$info";;
--original) git $2 $3 $4 $5 $6 $7 $8 $9;;
*) gitcheck;;
esac 

case $2 in 
	--push) $1 && git push Galang23 master;;
	--commit) $1 && eval ${commit};;
esac 
